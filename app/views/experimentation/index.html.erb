<%= render 'shared/page_heading', title: "Self-Experimentation", description: "Is it time for a change? Based on your past reflections and self-reports you can experiment with the settings of your existing habits, add and remove habits." do %>
<% end %>

<div class="flex flex-row pb-4 mb-4">
  <div class="grid grid-cols-3 gap-4">
    <div class="rounded border border-gray-100 bg-gray-50 p-4">
      <div class="font-medium text-gray-700 text-xs">
        Current Period
      </div>
      <div class="mt-2 text-lg font-semibold text-gray-800">
        Last 7 days
      </div>

      <div class="mt-2 font-medium text-gray-600 text-xs">
        <%= @current_period_start.to_date.strftime("%d.%m.%y") %> <%= " - " + @current_period_end.strftime("%d.%m.%y") %>
      </div>
    </div>
    <% if @has_data_before_start_date %>

      <div class="rounded border border-gray-100 bg-gray-50 p-4">
        <div class="font-medium text-gray-700 text-xs">
          Previous Period
        </div>
        <div class="mt-2 text-lg font-semibold text-gray-800">
          Previous 7 days
        </div>

        <div class="mt-2 font-medium text-gray-600 text-xs">
          <%= @first_reflection_at.to_date.strftime("%d.%m.%y") %> <%= " - " + @start_datetime.to_date.strftime("%d.%m.%y") %>
        </div>
      </div>

    <% end %>
  </div>
</div>

<div class="flow-root">
  <% @goals.each do |goal| %>
    <div class="flex flex-row border-b border-gray-200 mb-8">
      <div class="flex-grow">
        <h2 class="text-2xl font-serif mb-0"><i class="far fa-bullseye-arrow text-xl mx-auto"></i> <%= goal.title %></h2>
        <% goal.experience_sample_configs.each do |self_report| %>

          <div class="">
            <div class="flex flex-row">
              <div class="flex flex-col">
                <div class="text-lg text-gray-600 font-semibold">Self Report: <%= self_report.title %></div>
                <div class="text-gray-400 font-medium"><%= self_report.prompt %></div>
              </div>
              <div class="flex flex-row ml-auto pb-2">
                <div class="flex flex-col">
                  <div class="text-blue-400 font-semibold text-sm">Avg. <%= self_report.title %></div>
                  <div class="text-gray-400 text-sm">Current</div>
                </div>
                <div class="flex justify-center items-center ml-4">
                  <div class="text-blue-400 font-semibold text-lg">
                    3.2
                  </div>
                </div>
              </div>
              <div class="flex flex-row ml-4 pb-2">
                <div class="flex flex-col border-l border-gray-200 pl-4">
                  <div class="text-gray-400 font-semibold text-sm">Avg. <%= self_report.title %></div>
                  <div class="text-gray-400 text-sm">Previous</div>
                </div>
                <div class="flex justify-center items-center ml-4">
                  <div class="text-gray-400 font-semibold text-lg">
                    3.2
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- Chart Self-Report -->
          <div class="">
            <%
              chart = {
                data: self_report.samplings.where('scheduled_at >= ?', @current_period_start).where('scheduled_at <= ?', @current_period_end).map { |sampling| { x: sampling.scheduled_at.iso8601(3), y: sampling.value.nil? ?  0 : sampling.value } },
                min: 1,
                max: 1 + self_report.scale_steps-1,
                label: self_report.title
              }


            %>
            <%= content_tag :canvas, id: "myChart", class: "self-report-sampling-chart", data: { chart: chart.to_json } do %><% end %>
            <script>
                if(document.querySelectorAll(".self-report-sampling-chart").length) {

                    var chart = document.querySelector(".self-report-sampling-chart");
                    var data = JSON.parse(chart.dataset.chart);

                    const config = {
                        type: 'scatter',
                        data: {
                            datasets: [{
                                label: data.label,
                                data: data.data,
                                backgroundColor: "#1f2937",
                                borderColor: "#1f2937"
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'bottom',
                                    align: 'end'
                                }
                            },
                            scales: {
                                x: {
                                    bounds: 'ticks',
                                    type: 'time',
                                    min: new Date(<%= @current_period_start.to_i*1000 %>),
                                    max: new Date(<%= @current_period_end.to_i*1000 %>),
                                    time: {
                                        // Luxon format string
                                        tooltipFormat: 'DD T',
                                        isoWeekday: true,
                                        unit: 'day'
                                    },
                                    title: {
                                        display: false,
                                        text: 'Date'
                                    },
                                    ticks: {
                                        source: 'auto'
                                    }
                                },
                                y: {
                                    beginAtZero: true,
                                    min: 0,
                                    max: data.max,
                                    title: {
                                        display: false,
                                    }
                                }
                            }
                        }
                    };


                    var myChart = new Chart(
                        chart,
                        config
                    );
                }
            </script>
          </div>
        <% end %>
        <% goal.habits.each do |habit| %>

        <% end %>
      </div>
    </div>
  <% end %>
</div>
